# Matt-Tailnet.yaml
---
- name: Matt-Tailnet Installer
  hosts: all
  become: yes
  vars:
    tailscale_auth_key: "tskey-xxxxxxxxxxxxxxxx"  # Replace with your actual key
    advertise_subnet: "192.168.1.0/24"		  # replace with your actual subnet
    prom_node_exporter_version: "1.7.0"
    grafana_port: 3000
    grafana_admin: "admin"
    grafana_pass: "admin"
    dashboard_id: 1860  # Node Exporter Full

  tasks:

    - name: Install Cockpit
      apt:
        name:
          - cockpit
          - cockpit-networkmanager
        update_cache: yes
        state: present

    - name: Enable Cockpit
      systemd:
        name: cockpit.socket
        enabled: yes
        state: started

    - name: Allow Cockpit port
      ufw:
        rule: allow
        port: 9090
        proto: tcp

    - name: Install Tailscale
      shell: curl -fsSL https://tailscale.com/install.sh | sh
      args:
        executable: /bin/bash

    - name: Start Tailscale with subnet routing
      shell: >
        tailscale up --authkey={{ tailscale_auth_key }}
        --advertise-routes={{ advertise_subnet }}
      args:
        executable: /bin/bash

    - name: Download Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ prom_node_exporter_version }}/node_exporter-{{ prom_node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter.tar.gz"

    - name: Extract Node Exporter
      unarchive:
        src: "/tmp/node_exporter.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Move Node Exporter binary
      copy:
        src: "/tmp/node_exporter-{{ prom_node_exporter_version }}.linux-amd64/node_exporter"
        dest: "/usr/local/bin/node_exporter"
        remote_src: yes
        mode: '0755'

    - name: Create node_exporter user
      user:
        name: node_exporter
        shell: /usr/sbin/nologin
        system: yes

    - name: Create systemd service for Node Exporter
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Prometheus Node Exporter
          [Service]
          User=node_exporter
          ExecStart=/usr/local/bin/node_exporter
          [Install]
          WantedBy=default.target

    - name: Enable Node Exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Allow Node Exporter port
      ufw:
        rule: allow
        port: 9100
        proto: tcp

    - name: Install Grafana dependencies
      apt:
        name:
          - software-properties-common
          - apt-transport-https
        state: present

    - name: Add Grafana GPG key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - name: Install Grafana
      apt:
        name: grafana
        update_cache: yes
        state: present

    - name: Enable Grafana
      systemd:
        name: grafana-server
        enabled: yes
        state: started

    - name: Allow Grafana port
      ufw:
        rule: allow
        port: "{{ grafana_port }}"
        proto: tcp

    - name: Wait for Grafana to start
      wait_for:
        port: "{{ grafana_port }}"
        delay: 10

    - name: Add Prometheus data source to Grafana
      uri:
        url: "http://localhost:{{ grafana_port }}/api/datasources"
        method: POST
        user: "{{ grafana_admin }}"
        password: "{{ grafana_pass }}"
        force_basic_auth: yes
        status_code: 200
        body_format: json
        body:
          name: Prometheus
          type: prometheus
          url: http://localhost:9100
          access: proxy
          basicAuth: false

    - name: Import Grafana dashboard
      uri:
        url: "http://localhost:{{ grafana_port }}/api/dashboards/import"
        method: POST
        user: "{{ grafana_admin }}"
        password: "{{ grafana_pass }}"
        force_basic_auth: yes
        status_code: 200
        body_format: json
        body:
          dashboard:
            id: "{{ dashboard_id }}"
            uid: null
            title: "Node Exporter Full"
            tags: []
            timezone: "browser"
            schemaVersion: 16
            version: 0
          overwrite: true
          inputs: []